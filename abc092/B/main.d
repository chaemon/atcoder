import std.algorithm;
import std.conv;
import std.stdio;
import std.string;

void solve(long N, long D, long X, long[] A){
	int s = cast(int)X;
	for(int i = 0;i < N;i++){
		int d = 1;
		while(d <= D){
			s++;
			d += A[i];
		}
	}
	writeln(s);
}

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    auto input = stdin.byLine.map!split.joiner;

    long N;
    N = input.front.to!long;
    input.popFront;

    long D;
    D = input.front.to!long;
    input.popFront;

    long X;
    X = input.front.to!long;
    input.popFront;

    long[] A = new long[](cast(size_t) (N));
    foreach (i; 0 .. cast(size_t) (N)) {
        A[i] = input.front.to!long;
        input.popFront;
    }

    solve(N, D, X, A);
    return 0;
}

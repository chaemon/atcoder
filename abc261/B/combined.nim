import macros
macro Please(x): untyped = nnkStmtList.newTree()

Please use Nim-ACL
Please use Nim-ACL
Please use Nim-ACL


static:
  when not defined SecondCompile:
    discard staticExec("echo \"\" | base64 -d > atcoder.tar.xz && tar -Jxvf atcoder.tar.xz && rm atcoder.tar.xz")
    let (output, ex) = gorgeEx("nim cpp -d:release -d:SecondCompile --path:./ --opt:speed --multimethods:on --warning[SmallLshouldNotBeUsed]:off --checks:off -o:a.out Main.nim")
    doAssert ex == 0, output;quit(0)


const
  DO_CHECK = true
  DEBUG = true
  DO_TEST = false
  USE_DEFAULT_TABLE = true

# see https://github.com/zer0-star/Nim-ACL/tree/master/src/atcoder/extra/header/chaemon_header.nim
include atcoder/extra/header/chaemon_header



solveProc solve(N:int, A:seq[string]):
  for i in N:
    for j in N:
      if i == j: continue
      if A[i][j] == 'W':
        if A[j][i] != 'L':
          echo "incorrect";return
      elif A[i][j] == 'L':
        if A[j][i] != 'W':
          echo "incorrect";return
      elif A[i][j] == 'D':
        if A[j][i] != 'D':
          echo "incorrect";return
  echo "correct"
  discard

when not DO_TEST:
  var N = nextInt()
  var A = newSeqWith(N, nextString())
  solve(N, A)
else:
  discard


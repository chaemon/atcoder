#include <bits/stdc++.h>
using namespace std;

typedef long long Int;

const int B = 5;
Int dp[222222][B];


void solve(std::string S){
	for(int i = 0;i < S.size();i++){
		for(int d = 1;d <= B;d++){
			dp[i][d-1] = 0;
			int j = i - d;
			if(j == -1){
				dp[i][d-1] = 1;
			}else if(j < 0){
				continue;
			}else{
				string s0 = S.substr(j+1,d);
				for(int d2 = 1;d2 <= B;d2++){
					if(dp[j][d2-1]==0)continue;
					int j2 = j - d2;
//					if(j2 < 0)continue;
					string s2 = S.substr(j2+1,d2);
					if(s0 == s2)continue;
					dp[i][d-1] = max(dp[j][d2-1] + 1, dp[i][d-1]);
				}
			}
		}
	}
	Int ans = -1;
	for(int i = 0;i < B;i++){
		ans = max(ans, dp[S.size()-1][i]);
	}
	cout<<ans<<endl;
}

// Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
	std::string S;
	std::cin >> S;
	solve(S);
	return 0;
}
